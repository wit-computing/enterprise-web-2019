


  {
  
  
    "properties" : {},
  
  "type" : "lab",
  "title" : "Lab-03_HTML_CSS",
  "img" : "img/main.png",
  "videoid" : "none",
  "objectives" : "<p>By completing this lab you will develop an understanding of the basics of HTML/CSS/Bootstrap.</p>",
  "folder" : "book-1",
  "link" : "index.html",
  "los": [
   ]
,
  "chapters" : [
  
    {
    "title": "# HTML/CSS/Bootstrap Introduction",
    "shortTitle": "Lab-03_HTML_CSS",
    "contentMd" : "# HTML/CSS/Bootstrap Introduction\n\nBy completing this lab you will develop an understanding of the basics of HTML/CSS/Bootstrap.\n"
    },
  
    {
    "title": "# Objectives",
    "shortTitle": "Objectives",
    "contentMd" : "# Objectives\n\n- Setup your folder structure.\n- Create a simple HTML Page and view it in a browser.\n- Improve your page; Add more pages and create navigation links between the pages.\n- Style your pages using CSS.\n- Use Bootstrap to style the page."
    },
  
    {
    "title": "# Environment Setup",
    "shortTitle": "HTML",
    "contentMd" : "# Environment Setup\n\nIt is assumed you are using your own personal laptop/device with a standard, reasonably up-to-date operating system (e.g. Linux/IoS/Windows).\n\n## Browser\nIn order to complete the lab you need a browser that supports HTML5. Most up to date browsers do. We recommend to use Google Chrome as the lab instructions are based on this.\n\n## Editor\nYou will need a suitable editor to write your code. Sublime is recommended. Please download and install on your machine. If you wish, you can use another editor.\n\n## HTML Folder Structure\nCreate a new folder called *lab2* and create two more folders called *images*,*stylesheets* inside *lab2*. It should look something like this:\n\n~~~\n+-- lab3\n|   +--images\n|   +--stylesheets\n~~~\n\nYou're now ready to create a web page!\n\n## A Really Basic HTML Page\nCreate a new file in  the folder *lab3* called *index.html*. Enter the following HTML code and save.\n\n~~~html\n<!DOCTYPE html>\n<html>\n  <head>\n  </head>\n  <body>\n    <h1>Enterprise Web Cars</h1>\n    <p>Hello Enterprise Web</p>\n  </body>\n</html>\n~~~\nNow view this page in your browser by using the open option in the file menu of the browser. You should see the HTML rendered as follows:\n\n![FIGURE 1](./img/browser1.png)\n\nYou can see the general structure of the page and how the related to the mark up in the HTML code. As you did last week, open Developer Tools in Chrome and you can view HTML source and the rendered page at the same time. In the Elements tab, clicking on each element will result in the corresponding area in the page to be hightlighed. This will allow you to inspect your HTML code.\n\n![FIGURE 2](./img/browser2.png)\n\n## Adding Content\n\nWe'll now add some content to the page. Using the lecture slides and the web as a reference, try the following:\n\n- Add a ``<title>`` element with the value \"Enterprise Web Cars\" inside the ``<head>`` element.\nReplace the value of the ``<p>`` element in the body with the following text:\n\n~~~\nWe have the biggest selection of commercial and private cars in Ireland. Check out our new cars. This week we recommend the <em>Ford Mondeo</em>. What a car!\n~~~\n\n- Save and check the changes work in the browser. You should now see the title and some more content on your page.\n\n![FIGURE 3](./img/browser3.png)\n\n## Images and Links\nWe will now add some images and links to our web application. Save the following images into the images folder inside the *lab3* folder (right-click on image and select \"Save image as...\"):\n\n\n![FIGURE 4](./img/mondeo.jpg)\n![FIGURE 5](./img/golf.jpg)\n\n\nNow create a new folder, *stock*, in the *lab1* folder. In the *stock* folder create the a new file, *cars.html*, that contains the following html:\n \n~~~html\n<html>\n  <head>\n    <title> Enterprise Web Cars: New Cars </title>\n  </head>\n  <body>\n    <h2>Ford Mondeo</h2>\n    <p>\n      <img src=\"../images/mondeo.jpg\">\n      <p>Traction control, Radio/CD/MP3, Outside temperature meter, Multi function steering wheel, Isofix child seat anchor points, Immobiliser,                    Heated screen.</p>\n    </p>\n    <h2>Volkswagen Golf</h2>\n    <p>\n      <img src=\"../images/golf.jpg\">\n     <p>ABS, Driver Airbag, Passenger Airbag, Side Airbag, Child Locks, Deadlocks, Flat Tyre Indicator, ISO Fix, Multiple Airbags, Side Impact Protection, Xenon Headlights. </p>\n    <p>\n      <a href=\"../index.html\">Home</a>\n    </p>\n\n  </body>\n</html>\n~~~\n\nNotice how the ``src`` attributes in the ``<img>`` elements use relative addressing to reference the image files. Now return to your *index.html* page and update the paragraph text to include a link to this page as follows:\n\n~~~html\n We have the biggest selection of commercial and private cars in Ireland. Check out our <a href=\"stock/cars.html\"> new cars</a>. This week we recommend <em>the Ford Mondeo</em>. What a car!\n~~~\n\nCreate another folder, *about* in the *lab3* folder. In the stock folder create the a new file, *directions.html*, that contains the following html:\n\n~~~html\n<html>\n  <head>\n    <title>Enterprise Web Cars: Directions</title>\n  </head>\n  <body>\n    <h1>Directions</h1>\n    <p>Take the 305 S exit to Waterford go 0.4 mi</p>\n    <p>Continue on 305 go 12 mi</p>\n    <p>Turn right at Structure Ave N go 0.6 mi</p>\n    <p>Turn right and head toward Structure Ave N go 0.0 mi</p>\n    <p>Turn right at Structure Ave N go 0.7 mi</p>\n    <p>Continue on Structure Ave S go 0.2 mi</p>\n    <p>Turn right at SW Presentation Way go 0.0 mi</p>\n    <p>\n      <a href=\"../index.html\">Home</a>\n    </p>\n  </body>\n</html>\n~~~\n\nIn *index.html*, enter the following code after first paragraph to create a \"Directions\" section on the page:\n\n~~~html\n <h2>Directions</h2>\n    <p>\n      You'll find us right in the center of Waterford. If you need help finding\n      us, check out our\n      <a href=\"about/directions.html\">detailed directions</a>.\n      Come join us!\n    </p>\n~~~\n\nNow try the web application out, making sure the links work and images appear correctly.\n\n## Menu Bar\nThe site should offer clear navigation. While it's possible to have links in the text, we will also create a \"nav bar\" at the top of the screen with the same links.\n\nAdd the following HTML code just inside the <body> element. This contains an unordered list of links to the other pages in the site.\n\n~~~html\n<nav>\n    <a href=\"#\">Home</a> |\n    <a href=\"./stock/cars.html\">Cars</a> |\n    <a href=\"./about/directions.html\">Directions</a> |\n</nav>\n~~~\n\nAdd a navigation bar to the other two pages also. You will need to adjust the links relative to each page.\n\n## Favicon Icon\n\nFinally, we'll add a Favicon icon to our pages. A Favicon is a favorite icon associated with a particular page or organisation. It's the icon that appears on the browser tabs beside the title. Download the following icon to your *images* folder.\n\n![FIGURE 5](./img/favicon.ico)\n\nNow, in the <head> element, link to the icon by entering the following link element:\n\n~~~html\n <link rel=\"icon\" href=\"images/favicon.ico\">\n~~~\n\nAs with the menu bar, replicate this in the other pages. We'll now move on to apply some style to our page using CSS..."
    },
  
    {
    "title": "# Cascading Style Sheets",
    "shortTitle": "CSS",
    "contentMd" : "# Cascading Style Sheets\n\nHTML elements alone will give us a structured page - however it will have a very plain and unattractive appearance. To introduce 'style' into a page we need another language - Cascading Style Sheets (CSS). This is a different language from HTML and is usually stored in a separate file - the stylesheet.\n\n## CSS\n\nCreate a new file called *style.css* and save it into the *stylesheets* folder you created in the last step. Add the following lines of code to the file and save:\n\n~~~css\np\n{\n  color: maroon; /* Change text colour to maroon\n}\n~~~\n\nBind this file into your pages by 'linking' to it in the the ``<head>`` element of each page. Add the following line of code into the head element:\n\n~~~html\n    <link type=\"text/css\" rel=\"stylesheet\" href=\"stylesheets/style.css\" />\n~~~\n\nNow have a look at the *index.html* page in the browser - you should notice that the text in the paragraph is now maroon in colour. Add the link element to *cars.html* and *directions.html*. Again you will need to adjust the relative reference for each page.\n\nAdd the following rules one at a time a observe the effect:\n\n~~~css\nh1, h2\n{\n  color: #007e7e; \n}\n\nh1\n{\n  font-size: 200%; \n  border-bottom: 1px solid black;\n}\n\nh2\n{\n  font-size: 130%;\n}\n\n  body\n{\n  width: 80%;  \n  margin: 0 auto;\n  /*font-family Specifies the font for the element. If he browser does not support the first font, it tries the next font and so on... */\n  font-family: Verdana, Helvetica, Arial, sans-serif; \n  font-size:small;\n  line-height: 1.6em;\n}\n\nli {\n    display: inline;  /*displays list items inline instead of block. \n                        Result is nav bar items displayed horizontally.*/\n}\n~~~\n\nAll going well you should end up with your index.html page looking something like this:\n\n![FIGURE 4](./img/browser4.png)\n\n\nIf you want, you can explore the css rules by changing the values and observing the results.\n\n## CSS Class Selectors\n\nThe class selector allows you to apply syle rules to elements with a specific class attribute. Add the following paragraph element to your index.html page after the last body.\n\n~~~html\n<p>\nThinking of buying a car but don't have the cash? We've got the car loan for you!   With a variable rate loan from our financial partners carsharks.com you have the option of making extra repayments and clear your loan early. Lending criteria terms and conditions apply. For Consumer Hire Purchase of &euro;7,000 or more...\n</p>\n~~~\n\nIn the browser, it will appear with the standard style rules specified for paragraphs:\n\n![FIGURE 5](./img/browser5.png)\n\nWe want to draw attention to this paragraph in the overall page by applying specific style properties.For example, different font and background colour and add a background image beside the text.\n\nSave the following image, *background.gif*, to the images folder.\n\n![Background](./img/background.gif)\n\nUpdate the ``<p>`` element by adding a class attribute with the value \"finance\".\n\n~~~html\n<p class='finance'>\n~~~\n\nNow open *style.css* and add the following css rule with the appropriate class selector. Notice class selectors begin with a period followed by the class name. This will apply the style rules to all elements with attribute class=\"finance\".\n\n~~~css\n.finance\n{\n  border-color: white;\n  border-width: 1px;\n  border-style: dashed;\n\n  margin: 30px;\n  padding: 25px;\n  padding-left: 80px;\n  margin-right: 150px;\n\n  background-color: #a7cece;\n  background-image: url(../images/background.gif);\n  background-repeat: no-repeat;\n  background-position: top-left;\n\n  line-height: 1.9em;\n  font-style: italic;\n  font-family: Georgia, \"Times New Roman\", Times, serif;\n  color: black;\n}\n~~~\n\nView *index.html* in the browser. See how the finance paragraph is now more prominent. Play around with some of the style rules to understand their effect.\n\n![FIGURE 6](./img/browser6.png)"
    },
  
    {
    "title": "# Bootstrap and Forms",
    "shortTitle": "Bootstrap",
    "contentMd" : "# Bootstrap and Forms\n\nIn the last task you created your own custom css style. While this allows for full control over your styling, it can be a long process to develop from scratch. Furthermore, we should be trying to style our pages such that they look good on all devices such as smart phones, tablets etc.\n\nSeveral frameworks already exist that we can leverage to provide good generic styling that looks good everywhere. In this lab, we'll will use [Bootstrap 3.4](https://getbootstrap.com/docs/3.4/) to improve our simple web site. First we'll link to Bootstrap.\n\n## Linking to Bootstrap\nYou can link to more than one css style sheet in a page. To bind to the Bootstrap files, add the following into the head element of your pages, just above your own style sheet.\n\n~~~html\n   <!-- Bootstrap core CSS -->\n    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css\" rel=\"stylesheet\"/>\n   <!-- Bootstrap theme -->\n    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap-theme.min.css\" rel=\"stylesheet\"/>\n~~~\n\nBootstrap also uses some pre-written, core JavaScript libraries that can add a lot of cool features to you page. We can link to JavaScript files by adding the following code at the bottom of your HTML pages (just before the closing ``</html>`` tag.\n\n~~~html\n   <!-- Bootstrap core JavaScript\n    ================================================== -->\n    <!-- Placed at the end of the document so the pages load faster -->\n    <script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js\"></script>\n~~~\n\nYou'll notice that your page will look the same. This is because your style settings are overriding bootstrap default styles (e.g. borders).\n\nNext we'll include a viewport meta tag on our page. Bootstrap is designed with mobile devices in mind so to ensure proper rendering and touch zooming. To try to ensure this, insert the following line in the ``<head>`` element.\n\n~~~html\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n~~~\n\nWe're going to use a Bootstrap theme to style up this screen so we will use the class attribute to apply bootstrap themes to our HTML.\n\n## Update style.css\n\nOpen *style.css* file you created in the CSS section and delete all CSS rules apart from the finance class rule. This will let the general bootstrap style apply to your element. The contents of style.css should now look like this:\n\n~~~css\n.finance\n{\n  border-color: white;\n  border-width: 1px;\n  border-style: dashed;\n\n  margin: 30px;\n  padding: 25px;\n  padding-left: 80px;\n  margin-right: 150px;\n\n  background-color: #a7cece;\n  background-image: url(../images/background.gif);\n  background-repeat: no-repeat;\n  background-position: top-left;\n\n  line-height: 1.9em;\n  font-style: italic;\n  font-family: Georgia, \"Times New Roman\", Times, serif;\n  color: black;\n}\n~~~\n\n\n## Applying Bootstrap Theme\nWe will use a ``<div>`` to apply the showcase theme to the whole document. Put the following div element into the *index.html* page, starting just above the nav bar and ending just before the closing ``</body>`` tag.\n\n~~~html\n <div class=\"container theme-showcase\" role=\"main\">\n...\n...\n...\n </div>\n\n</body>\n~~~\n\nTo make the navigation bar appear across the top of the page, add the following class attributes to the existing ``<nav>`` and ``<ul>`` elements:\n\n~~~html\n<nav class=\"navbar\">\n    <ul class=\"nav navbar-nav\">\n~~~\n\nNow take another look at *index.html* in the browser (you may need to refresh the page). It should look like this:\n\n![FIGURE 7](./img/browser7.png)\n\n## Jumbotron\n\nApply the \"jumbotron\" style to your heading for a primary marketing message or impact. Insert a new ``<div>`` around the heading and add a new \"marketing message\" paragraph as follows:\n\n~~~html\n<div class=\"jumbotron\">\n    <h1>Enterprise Web Cars</h1> <!--Already in the page...-->\n    <p>The best selection of commercial and private cars in Ireland.</p>\n</div>\n~~~\n\nAs you'll see, this has a substantial effect on the rendered page. Also, resize the browser window and notice how the page adjusts accoordingly. This is a key feature of Bootstrap, enabling it to look good on any device.\n\n![FIGURE 8](./img/browser8.png)\n\n## Improve the Nav Bar\nLet's improve the Navigation bar by adding a collapsed nav bar button for small screen devices. Replace completely the existing <nav> element with the following:\n\n~~~html\n<nav class=\"navbar navbar-inverse navbar-fixed-top\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n        </div>\n        <div id=\"navbar\" class=\"navbar-collapse collapse\">\n          <ul class=\"nav navbar-nav\">\n            <li class=\"active\"><a href=\"#\">Home</a> </li>\n            <li><a href=\"stock/cars.html\">Cars</a> </li>\n            <li><a href=\"about/directions.html\">Directions</a> </li>\n          </ul>\n      </div> \n    </div>\n    </nav>\n~~~\n\nGo though the code and try to relate to what you see on the screen. In particular, notice what happens the nav bar when you resize the browser window to be quite small (or displayed in a small screes/resolution device such as a smart phone).\n\nYou may notice the Nav bar obscures some of the title area. We can remedy this by including the following padding rule in *styles.css*.\n\n~~~css\nbody {\n  padding-top: 70px;\n  padding-bottom: 30px;\n}\n~~~\n\nView in a browser to check the results:\n\n![FIGURE 9](./img/browser9.png)\n\n## HTML Form\nFinally, HTML forms allow users to enter and submit data via the browser window. We will add a new HTML form that allows users to submit their email address. Again, we can use Bootstrap classifiers to style the form. Enter the following HTML just after the finance paragraph:\n~~~html\n<form class=\"form-inline\" role=\"form\">\n    <label>Send us your email to keep informed about our great deals</label><br/>\n    <div class=\"form-group\">\n    <input  type=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Enter email\"/>\n    </div>\n    <input type=\"button\" value=\"Go\" onclick=\"console.log(document.getElementById('email').value)\" >\n</form>\n      ~~\n~~~\n\n![FIGURE 10](./img/browser10.png)\n\nNotice the use of attributes to include text placeholder. Also, the ``onclick`` attribute contains some JavaScript that, using an element id, will execute when the button is clicked. This output the contents of the email text will be output to the console. Have a look at the Javascript console in Developer Tools in your browser when you click the button. Try to understand the code and how it does this."
    }
  
  ]
  }

